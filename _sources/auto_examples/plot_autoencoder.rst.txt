
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plot_autoencoder.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_plot_autoencoder.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_autoencoder.py:


Autoencoder
===========

This is an example of defining an autoencoder RBN with a single continuous variable.

.. GENERATED FROM PYTHON SOURCE LINES 9-10

We use the classes defined in :mod:`rbnet.autoencoder`

.. GENERATED FROM PYTHON SOURCE LINES 10-27

.. code-block:: Python


    import torch

    from rbnet.sequential import SequentialRBN
    from rbnet.autoencoder import AutoencoderCell, AutoencoderTransition, AutoencoderNonTermVar, AutoencoderPrior

    cell = AutoencoderCell(
        transition=AutoencoderTransition(terminal_encoder=lambda x: x,
                                         terminal_decoder=lambda z, x: torch.ones(1),
                                         # non_terminal_encoder=lambda x1, x2: (x1 + x2) / 2,
                                         non_terminal_encoder=lambda x1, x2: max(x1, x2),
                                         non_terminal_decoder=lambda z, x1, x2: torch.ones(1)),
        variable=AutoencoderNonTermVar(dim=1)
    )
    rbn = SequentialRBN(cells=[cell], prior=AutoencoderPrior())
    print(rbn.inside(torch.linspace(0, 10, 6)[:, None]))
    for p in rbn.inside_chart[0].pretty():
        print(p)



.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    (tensor([20208.]), tensor(42.))
                                 ╱╲                             
                                ╱  ╲                            
                               ╱    ╲                           
                              ╱      ╲                          
                             ╱[20208.]╲                         
                            ╱╲        ╱╲                        
                           ╱  ╲      ╱  ╲                       
                          ╱    ╲    ╱    ╲                      
                         ╱      ╲  ╱      ╲                     
                        ╱  [598.]╲╱  [794.]╲                    
                       ╱╲        ╱╲        ╱╲                   
                      ╱  ╲      ╱  ╲      ╱  ╲                  
                     ╱    ╲    ╱    ╲    ╱    ╲                 
                    ╱      ╲  ╱      ╲  ╱      ╲                
                   ╱   [46.]╲╱   [64.]╲╱   [82.]╲               
                  ╱╲        ╱╲        ╱╲        ╱╲              
                 ╱  ╲      ╱  ╲      ╱  ╲      ╱  ╲             
                ╱    ╲    ╱    ╲    ╱    ╲    ╱    ╲            
               ╱      ╲  ╱      ╲  ╱      ╲  ╱      ╲           
              ╱    [8.]╲╱   [12.]╲╱   [16.]╲╱   [20.]╲          
             ╱╲        ╱╲        ╱╲        ╱╲        ╱╲         
            ╱  ╲      ╱  ╲      ╱  ╲      ╱  ╲      ╱  ╲        
           ╱    ╲    ╱    ╲    ╱    ╲    ╱    ╲    ╱    ╲       
          ╱      ╲  ╱      ╲  ╱      ╲  ╱      ╲  ╱      ╲      
         ╱    [2.]╲╱    [4.]╲╱    [6.]╲╱    [8.]╲╱   [10.]╲     
        ╱╲        ╱╲        ╱╲        ╱╲        ╱╲        ╱╲    
       ╱  ╲      ╱  ╲      ╱  ╲      ╱  ╲      ╱  ╲      ╱  ╲   
      ╱    ╲    ╱    ╲    ╱    ╲    ╱    ╲    ╱    ╲    ╱    ╲  
     ╱      ╲  ╱      ╲  ╱      ╲  ╱      ╲  ╱      ╲  ╱      ╲ 
    ╱    [0.]╲╱    [2.]╲╱    [4.]╲╱    [6.]╲╱    [8.]╲╱   [10.]╲
                     ╱╲                 
                    ╱  ╲                
                   ╱42.0╲               
                  ╱╲    ╱╲              
                 ╱  ╲  ╱  ╲             
                ╱14.0╲╱14.0╲            
               ╱╲    ╱╲    ╱╲           
              ╱  ╲  ╱  ╲  ╱  ╲          
             ╱ 5.0╲╱ 5.0╲╱ 5.0╲         
            ╱╲    ╱╲    ╱╲    ╱╲        
           ╱  ╲  ╱  ╲  ╱  ╲  ╱  ╲       
          ╱ 2.0╲╱ 2.0╲╱ 2.0╲╱ 2.0╲      
         ╱╲    ╱╲    ╱╲    ╱╲    ╱╲     
        ╱  ╲  ╱  ╲  ╱  ╲  ╱  ╲  ╱  ╲    
       ╱ 1.0╲╱ 1.0╲╱ 1.0╲╱ 1.0╲╱ 1.0╲   
      ╱╲    ╱╲    ╱╲    ╱╲    ╱╲    ╱╲  
     ╱  ╲  ╱  ╲  ╱  ╲  ╱  ╲  ╱  ╲  ╱  ╲ 
    ╱ 1.0╲╱ 1.0╲╱ 1.0╲╱ 1.0╲╱ 1.0╲╱ 1.0╲





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.007 seconds)


.. _sphx_glr_download_auto_examples_plot_autoencoder.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_autoencoder.ipynb <plot_autoencoder.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_autoencoder.py <plot_autoencoder.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_autoencoder.zip <plot_autoencoder.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
